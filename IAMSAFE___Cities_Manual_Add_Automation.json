{
  "name": "IAMSAFE - Cities Manual Add Automation",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        700,
        260
      ],
      "id": "9f1f2997-0ac9-498a-821a-61676d1ae2f2",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "7bbd2d37-0538-473c-b2c2-4d31ebfd06c8",
              "leftValue": "={{ $json.output.cityName }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        440,
        -20
      ],
      "id": "ce26c3fc-5a65-4030-b049-f877f6d4c7af",
      "name": "check if its Correct message"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1wpzNsN1LaNumKTi_Ny7PzGREPygoPOCo0bygTPZ96kc",
          "mode": "list",
          "cachedResultName": "il_adresses",
          "cachedResultUrl": "YOUR_GOOGLE_SHEET"
        },
        "sheetName": {
          "__rl": true,
          "value": 1596691630,
          "mode": "list",
          "cachedResultName": "IL_Address_list",
          "cachedResultUrl": "YOUR_GOOGLE_SHEET"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "City",
              "lookupValue": "={{ $json.cityName }}"
            }
          ]
        },
        "combineFilters": "OR",
        "options": {
          "returnFirstMatch": false
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1400,
        -20
      ],
      "id": "ae5f9e51-d1e0-4251-a630-c8bf02fb63a9",
      "name": "Google Sheets",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "rysHCoQLqJVOUfBj",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const blocks = [];\n\nblocks.push({\n  type: \"section\",\n  text: {\n    type: \"mrkdwn\",\n    text: \"📢 *Direct Hit in an Employee Location, Message sent to:*\"\n  }\n});\n\nlet currentText = \"\";\n\nitems.forEach((item, index) => {\n  const data = item.json;\n  currentText += `👤 *${data[\"﻿Display name\"]}* | 🏢 ${data.Department} | 📍 ${data.City} | 📧 ${data.Email}\\n`;\n\n  // Flush every 100 employees (for Slack max 50 blocks)\n  if ((index + 1) % 40 === 0 || index === items.length - 1) {\n    blocks.push({\n      type: \"section\",\n      text: {\n        type: \"mrkdwn\",\n        text: currentText\n      }\n    });\n    blocks.push({ type: \"divider\" });\n    currentText = \"\";\n  }\n});\n\nreturn [{ json: { blocks } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2780,
        -300
      ],
      "id": "71288988-5d9a-4a1d-86a5-1ec1c7a329bf",
      "name": "Aggregate all results and prepare slack"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1f741020-381b-4a14-8ffa-c66cc0d3dc5b",
              "leftValue": "={{ $json.isEmpty }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1860,
        -20
      ],
      "id": "1176fafa-b534-490e-a7ed-a3a6e8eba2be",
      "name": "Check if any employee live in a hit area"
    },
    {
      "parameters": {
        "jsCode": "const blocks = [];\n\nblocks.push({\n  type: \"section\",\n  text: {\n    type: \"mrkdwn\",\n    text: \"📢 *Direct Hit in a City — No Employees in Location*\"\n  }\n});\n\nblocks.push({\n  type: \"section\",\n  text: {\n    type: \"mrkdwn\",\n    text: `🚀 *City hit:* ${$('Loop Over Items').first().json.cityName}\\n✅ No employees reside in this location.`\n  }\n});\n\nreturn [{ json: { blocks } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2420,
        200
      ],
      "id": "260bf133-73ee-4e75-bbeb-38806e8e17e8",
      "name": "create a message for no employee live in the area"
    },
    {
      "parameters": {
        "jsCode": "const isEmpty = items.length === 0 || (items.length === 1 && Object.keys(items[0].json).length === 0);\n\nif (isEmpty) {\n  return [{\n    json: {\n      isEmpty: true\n    }\n  }];\n} else {\n  return items.map(item => {\n    return {\n      json: {\n        ...item.json,\n        isEmpty: false\n      }\n    };\n  });\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1620,
        -20
      ],
      "id": "adf173e2-d1c9-464c-9c0c-7a981fabd067",
      "name": "isEmpty"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Title: {{ $json.cityNames }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are a Hebrew-language RSS title city name extractor.\n\nYour task is:\nTo detect and extract Israeli city names mentioned in the input title.\n\nInput:\nYou will receive a Hebrew RSS title (string).\nThe title may contain:\n\nFull city names (e.g. \"תל אביב\", \"אשדוד\")\nShort initials (e.g. \"ב״ש\", \"ת״א\", \"ר״ג\")\n\nYou must translate common initials into full city names.\nYour output must be exactly in this JSON format:\n{\n  \"cityName\": \"comma-separated list of full city names found, or null if none\"\n}\n\nImportant Rules:\n* Only extract actual city names.\n* Ignore regions (e.g. \"גוש דן\", \"השרון\", \"עוטף עזה\") — do not include these.\n* If the title contains no city names, output cityName: null.\n* If initials are detected, translate them to full city names.\n* The list should be comma-separated, sorted in the order they appear in the title.\n* If the same city appears more than once — list it only once.\n\nCommon initials to translate:\nInitial\tFull Name\nת״א\tתל אביב\nב״ש\tבאר שבע\nר״ג\tרמת גן\nק״ג\tקריית גת\nק״ב\tקריית ביאליק\nק״ש\tקריית שמונה\n\nExamples:\nTitle:\nפגיעה ישירה בבת ים ותל אביב\n{\n  \"cityName\": \"בת ים, תל אביב\"\n}\n\nTitle:\nפגיעה ישירה בגוש דן\n{\n  \"cityName\": null\n}\n\nTitle:\nנפילה בגוש דן וב״ש\n{\n  \"cityName\": \"באר שבע\"\n}\n\nTitle:\nפגיעה ישירה בבית בב״ש, ת״א ור״ג\n{\n  \"cityName\": \"באר שבע, תל אביב, רמת גן\"\n}\n\nTitle:\nאזעקה בלבד בשרון — אין נפילה\n{\n  \"cityName\": null\n}\n\nTitle:\nהאזעקות נמשכות, דיווחים ראשוניים על נפילות בשפלה ובאזור חיפה\n{\n  \"cityName\": \"חיפה\"\n}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -20,
        -20
      ],
      "id": "f3e2fdd9-6d32-4765-8df4-6e03408c0f3c",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -40,
        240
      ],
      "id": "04d8aa05-d4ce-4247-8de2-dd1db5a57361",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "z4NcHnFzA4NAkpuH",
          "name": "OpenAi account 6"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"isCorrect\":\"string\",\n  \"cityName\":\"string\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        220,
        240
      ],
      "id": "907f7f7b-0596-4a9c-9869-5efffb5e2f39",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "jsCode": "const inputString = $input.first().json.output.cityName|| null;\n\nif (!inputString || typeof inputString !== \"string\") {\n  return [];  // no cities — return empty array\n}\n\nconst cities = inputString\n  .split(\",\")\n  .map(city => city.trim())\n  .filter(city => city.length > 0)\n  .map(city => {\n    return {\n      json: {\n        cityName: city\n      }\n    };\n  });\n\nreturn cities;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        860,
        -20
      ],
      "id": "43e27169-a0b8-47a4-82a2-77386045f945",
      "name": "City List Parser"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1140,
        -20
      ],
      "id": "d8a1f680-18c4-4fd6-81b9-537dc80203a9",
      "name": "Loop Over Items"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1420,
        -260
      ],
      "id": "1e2d03eb-fa5e-4c40-b451-9cd7c5ad2353",
      "name": "No Operation, do nothing2"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3560,
        280
      ],
      "id": "3287fe56-ebef-4741-b515-16bc890b9956",
      "name": "No Operation, do nothing3"
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C0918AFJ2J3",
          "mode": "id"
        },
        "messageType": "block",
        "blocksUi": "={{ { \"blocks\": $json.blocks } }}",
        "text": "=",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        3220,
        0
      ],
      "id": "239da5fc-a768-4b32-ae27-dbf7498aad1b",
      "name": "Slack Channel",
      "webhookId": "112af922-bdbb-496b-8bd0-972da7e9c657",
      "credentials": {
        "slackApi": {
          "id": "XsNtNr8ZuaiXpMZ1",
          "name": "Slack API  -Shahar v1"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1wpzNsN1LaNumKTi_Ny7PzGREPygoPOCo0bygTPZ96kc",
          "mode": "list",
          "cachedResultName": "il_adresses",
          "cachedResultUrl": "YOUR_GOOGLE_SHEET"
        },
        "sheetName": {
          "__rl": true,
          "value": 1596691630,
          "mode": "list",
          "cachedResultName": "IL_Address_list",
          "cachedResultUrl": "YOUR_GOOGLE_SHEET"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Email": "={{ $('Dont send notification for recurring events (minutes)').item.json.Email }}",
            "checkDateTime": "={{ $json.currentDateTime }}",
            "checkSafeStatus": "true"
          },
          "matchingColumns": [
            "Email"
          ],
          "schema": [
            {
              "id": "﻿Display name",
              "displayName": "﻿Display name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Department",
              "displayName": "Department",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "City",
              "displayName": "City",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "checkSafeStatus",
              "displayName": "checkSafeStatus",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "checkDateTime",
              "displayName": "checkDateTime",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        3020,
        -500
      ],
      "id": "7cba0c82-20e8-4718-ac9c-452a328d600f",
      "name": "Update Impacted Employees",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "rysHCoQLqJVOUfBj",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const referenceDateTime = new Date();\n\nconst output = [];\n\nitems.forEach(item => {\n  const checkDateTime = new Date(item.json.checkDateTime);\n\n  const diffMs = Math.abs(referenceDateTime - checkDateTime);\n  const diffMinutes = Math.round(diffMs / (1000 * 60));\n\n  output.push({\n    json: {\n      ...item.json,\n      diffMinutes\n    }\n  });\n});\n\nreturn output;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2140,
        -280
      ],
      "id": "ecbe70a9-dae1-4c02-a607-2f055770f858",
      "name": "Check Time Diff"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2780,
        -80
      ],
      "id": "c0ab80b2-86f9-4a5c-a6c2-37b5fb1afea3",
      "name": "No Operation, do nothing4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a42b5222-0fa1-4782-a405-b75531d402ac",
              "leftValue": "={{ $json.diffMinutes }}",
              "rightValue": 180,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            },
            {
              "id": "9e02442e-72e2-45fd-aae3-37149768f3af",
              "leftValue": "={{ $json.diffMinutes }}",
              "rightValue": "null",
              "operator": {
                "type": "number",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2420,
        -280
      ],
      "id": "9811c726-62b4-45a2-a617-a2877e6f11d3",
      "name": "Dont send notification for recurring events (minutes)"
    },
    {
      "parameters": {
        "jsCode": "// Extract all city names\nconst cityNames = items.map(item => item.json.impactedCityName);\n\n// Sort A→Z\ncityNames.sort((a, b) => a.localeCompare(b));\n\n// Join with comma\nconst combined = cityNames.join(', ');\n\n// Return as single item\nreturn [\n  {\n    json: {\n      cityNames: combined\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -500,
        -20
      ],
      "id": "0aec55b5-781e-4e02-8b4a-0960f7af4a9a",
      "name": "Change key name"
    },
    {
      "parameters": {
        "jsCode": "const now = new Date();\nconst formatted = now.toISOString().split('.')[0] + '.000Z';\n\nreturn [\n  {\n    json: {\n      currentDateTime: formatted\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2780,
        -500
      ],
      "id": "112c7c0f-5542-4b73-81a4-24b3c81ff3b9",
      "name": "Get Current Date in a Format"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -660,
        -280
      ],
      "id": "13a5a955-8ba8-4203-af05-6a9599f75db9",
      "name": "Loop Over Cities"
    },
    {
      "parameters": {
        "operation": "delete",
        "documentId": {
          "__rl": true,
          "value": "1lHVWNkOPPpzPKQ743rZ4Rr4BhiT2VoYGuzUAwQhA0w4",
          "mode": "list",
          "cachedResultName": "cities",
          "cachedResultUrl": "YOUR_CITIES_GOOGLE_SHEET"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "YOUR_CITIES_GOOGLE_SHEET"
        },
        "startIndex": "={{ $json.row_number }}"
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -220,
        -240
      ],
      "id": "43611cfe-f3e3-40ff-92c5-3a4c3cc6bd8e",
      "name": "Delete city from Cities Sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "rysHCoQLqJVOUfBj",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -220,
        -420
      ],
      "id": "5c28187f-5fd2-4309-9489-6427da05c0ae",
      "name": "No Operation, do nothing5"
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "value": "1lHVWNkOPPpzPKQ743rZ4Rr4BhiT2VoYGuzUAwQhA0w4",
          "mode": "list",
          "cachedResultName": "cities",
          "cachedResultUrl": "YOUR_CITIES_GOOGLE_SHEET"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "YOUR_CITIES_GOOGLE_SHEET"
        },
        "event": "rowAdded",
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "typeVersion": 1,
      "position": [
        -1040,
        -160
      ],
      "id": "f62f4e8a-d3e0-4a9f-874a-d4a82c71509f",
      "name": "Google Sheets Trigger",
      "credentials": {
        "googleSheetsTriggerOAuth2Api": {
          "id": "SA3T3kIawBc07dwX",
          "name": "Google Sheets Trigger account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1lHVWNkOPPpzPKQ743rZ4Rr4BhiT2VoYGuzUAwQhA0w4",
          "mode": "list",
          "cachedResultName": "cities",
          "cachedResultUrl": "YOUR_CITIES_GOOGLE_SHEET"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "YOUR_CITIES_GOOGLE_SHEET"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "impactedCityName",
              "lookupValue": "={{ $json.impactedCityName }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -420,
        -240
      ],
      "id": "e7adc62b-dd83-4637-bdec-1e271fc0c908",
      "name": "Get Original Row Number",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "rysHCoQLqJVOUfBj",
          "name": "Google Sheets account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "check if its Correct message": {
      "main": [
        [
          {
            "node": "City List Parser",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "isEmpty",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate all results and prepare slack": {
      "main": [
        [
          {
            "node": "Slack Channel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create a message for no employee live in the area": {
      "main": [
        [
          {
            "node": "Slack Channel",
            "type": "main",
            "index": 0
          },
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if any employee live in a hit area": {
      "main": [
        [
          {
            "node": "Check Time Diff",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "create a message for no employee live in the area",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isEmpty": {
      "main": [
        [
          {
            "node": "Check if any employee live in a hit area",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "check if its Correct message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "City List Parser": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing3": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Slack Channel": {
      "main": [
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Time Diff": {
      "main": [
        [
          {
            "node": "Dont send notification for recurring events (minutes)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dont send notification for recurring events (minutes)": {
      "main": [
        [
          {
            "node": "Aggregate all results and prepare slack",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Current Date in a Format",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Change key name": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Current Date in a Format": {
      "main": [
        [
          {
            "node": "Update Impacted Employees",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Impacted Employees": {
      "main": [
        []
      ]
    },
    "Loop Over Cities": {
      "main": [
        [
          {
            "node": "No Operation, do nothing5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Original Row Number",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete city from Cities Sheet": {
      "main": [
        [
          {
            "node": "Loop Over Cities",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets Trigger": {
      "main": [
        [
          {
            "node": "Change key name",
            "type": "main",
            "index": 0
          },
          {
            "node": "Loop Over Cities",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Original Row Number": {
      "main": [
        [
          {
            "node": "Delete city from Cities Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "04516a23-1240-4f55-854a-16a9e8b884a4",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "1e0a255e002edd936f91861dcb4555a8e0e2a5cf8ca3b3cddba604da8d42b97d"
  },
  "id": "BBCeLNZHLa7R7N3e",
  "tags": [
    {
      "createdAt": "2025-01-28T11:03:45.941Z",
      "updatedAt": "2025-01-28T11:03:45.941Z",
      "id": "yYFxETM2cD1Ce9yA",
      "name": "DevOps"
    }
  ]
}